const chains = new Map()

class Chain {
  constructor({
    name, type,
    port, networkMagic,
    pubkeyhash, privatekey, scripthash, witnesshrp, evm,
    genesis, lastPoWBlockHeight
  } = {}) {
    this.name = name
    this.type = type
    this.port = port
    this.networkMagic = networkMagic
    this.pubkeyhash = pubkeyhash
    this.privatekey = privatekey
    this.scripthash = scripthash
    this.witnesshrp = witnesshrp
    this.evm = evm
    this.genesis = genesis
    this.lastPoWBlockHeight = lastPoWBlockHeight
  }

  static add(options) {
    let chain = new Chain(options)
    chains.set(chain.name, chain)
  }

  static get(name) {
    return chains.get(name)
  }
}

Chain.add({
  name: 'mainnet',
  type: 'mainnet',
  port: 9947,
  networkMagic: Buffer.from([0xcf, 0xf1, 0xd3, 0xa6]),
  pubkeyhash: 0x3d,
  privatekey: 0xd8,
  scripthash: 0x7b,
  witnesshrp: 'rc',
  evm: 0x21,
  genesis: Buffer.from('010000000000000000000000000000000000000000000000000000000000000000000000af81823c08fde3af610b8e650fd204e817ee6f346cc2f0462d13eefa0801054d85dbbf5dffff001f916b0500e965ffd002cd6ad0e2dc402b8044de833e06b23127ea8c3d80aec9141077149556e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b4210000000000000000000000000000000000000000000000000000000000000000ffffffff000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4a0004bf91221d010441426c6f636b636861696e20636f756c642062652067616d65206368616e67657220696e207375737461696e61626c6520646576656c6f706d656e7420676f616c73ffffffff0100f2052a01000000434104e6cb4213b55751cd6ae4e747a1eb785d999f12e58c105edc07864b88e36133fa7918c7e2dd050e865ac5f67fa564df31509c8e90f107fd3e82da3409beea33e1ac00000000', 'hex'),
  lastPoWBlockHeight: 5000
})

Chain.add({
  name: 'testnet',
  type: 'testnet',
  port: 19947,
  networkMagic: Buffer.from([0xac, 0xb2, 0xd5, 0x2d]),
  pubkeyhash: 0x0b,
  privatekey: 0xe5,
  scripthash: 0x6a,
  witnesshrp: 'tr',
  evm: 0x5c,
  genesis: Buffer.from('010000000000000000000000000000000000000000000000000000000000000000000000af81823c08fde3af610b8e650fd204e817ee6f346cc2f0462d13eefa0801054d16ddbf5dffff001ffb200300e965ffd002cd6ad0e2dc402b8044de833e06b23127ea8c3d80aec9141077149556e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b4210000000000000000000000000000000000000000000000000000000000000000ffffffff000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4a0004bf91221d010441426c6f636b636861696e20636f756c642062652067616d65206368616e67657220696e207375737461696e61626c6520646576656c6f706d656e7420676f616c73ffffffff0100f2052a01000000434104e6cb4213b55751cd6ae4e747a1eb785d999f12e58c105edc07864b88e36133fa7918c7e2dd050e865ac5f67fa564df31509c8e90f107fd3e82da3409beea33e1ac00000000', 'hex'),
  lastPoWBlockHeight: 5000
})

Chain.add({
  name: 'regtest',
  type: 'regtest',
  port: 29947,
  networkMagic: Buffer.from([0xaa, 0xbd, 0xaf, 0xd1]),
  pubkeyhash: 0x71,
  privatekey: 0xca,
  scripthash: 0x7b,
  witnesshrp: 'rcrt',
  evm: 0x5c,
  genesis: Buffer.from('010000000000000000000000000000000000000000000000000000000000000000000000af81823c08fde3af610b8e650fd204e817ee6f346cc2f0462d13eefa0801054d5ddebf5dffff7f2003000000e965ffd002cd6ad0e2dc402b8044de833e06b23127ea8c3d80aec9141077149556e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b4210000000000000000000000000000000000000000000000000000000000000000ffffffff000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4a0004bf91221d010441426c6f636b636861696e20636f756c642062652067616d65206368616e67657220696e207375737461696e61626c6520646576656c6f706d656e7420676f616c73ffffffff0100f2052a01000000434104e6cb4213b55751cd6ae4e747a1eb785d999f12e58c105edc07864b88e36133fa7918c7e2dd050e865ac5f67fa564df31509c8e90f107fd3e82da3409beea33e1ac00000000', 'hex'),
  lastPoWBlockHeight: Infinity
})

module.exports = Chain
